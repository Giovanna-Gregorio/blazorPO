@page "/register"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h1>Cadastro</h1>

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        @foreach (var error in Errors)
        {
            <p>@error</p>
        }
    </div>
}

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Preencha as informações</h5>
        <EditForm Model="RegisterModel" OnValidSubmit="HandleRegistration" @onreset="HandleReset">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">Email</label>
                <InputText Id="email" class="form-control" @bind-Value="RegisterModel.Email" />
                @* <ValidationMessage For="@(() => RegisterModel.Email)" /> *@
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    <label for="password">Senha</label>
                    <InputText Id="password" type="password" class="form-control" @bind-Value="RegisterModel.Password" />
                    @* <ValidationMessage For="@(() => RegisterModel.Password)" /> *@
                </div>
                <div class="form-group col-md-6">
                    <label for="password">Confirmação de Senha</label>
                    <InputText Id="confirmPassword" type="password" class="form-control" @bind-Value="RegisterModel.ConfirmPassword" />
                    @* <ValidationMessage For="@(() => RegisterModel.ConfirmPassword)" /> *@
                </div>
            </div>

            <div class="row justify-content-md-center">
                <div>
                    <button class="btn btn-secondary" type="reset">Cancelar</button>
                     <button class="btn btn-success" type="submit">Cadastrar</button>
                </div>
            </div>

        </EditForm>
    </div>
</div>

@code {

    private RegisterModel RegisterModel = new RegisterModel();
    private EditContext editContext { get; set; }
    private bool ShowErrors;
    private IEnumerable<string> Errors;

    private async Task HandleRegistration()
    {
        ShowErrors = false;

        var result = await AuthService.Register(RegisterModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("login");
        }
        else
        {
            Errors = result.Errors;
            ShowErrors = true;
        }
    }

    private void HandleReset()
    {
        RegisterModel = new RegisterModel();
        editContext = new EditContext(RegisterModel);
    }

}